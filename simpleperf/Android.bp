//
// Copyright (C) 2018 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

cc_defaults {
    name: "simpleperf_defaults",

    cflags: [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-Wimplicit-fallthrough",

        // Try some more extreme warnings.
        "-Wpedantic",
        "-Wunreachable-code-aggressive",
        // And disable some dumb things.
        "-Wno-zero-length-array",
        "-Wno-c99-extensions",
        "-Wno-language-extension-token",
        "-Wno-gnu-zero-variadic-macro-arguments",
        "-Wno-nested-anon-types",
        "-Wno-gnu-statement-expression",
        "-Wno-vla-extension",
    ],
    cppflags: [
        "-Wno-sign-compare",
        "-Wno-unused-parameter",
    ],
}

cc_defaults {
    name: "libsimpleperf_elf_read_static_reqs_defaults",
    static_libs: [
        "libLLVMObject",
        "libLLVMBitReader",
        "libLLVMMC",
        "libLLVMMCParser",
        "libLLVMCore",
        "libLLVMSupport",
        "liblzma",
        "libz",
        "libziparchive",
    ],
}

cc_library_static {
    name: "libsimpleperf_elf_read",
    defaults: [
        "simpleperf_defaults",
        "libsimpleperf_elf_read_static_reqs_defaults",
    ],
    host_supported: true,

    export_include_dirs: [
        ".",
    ],

    // TODO: fix or workaround this.
    cflags: [
        "-DSIMPLEPERF_REVISION=\"dummy\"",
    ],

    static_libs: [
        "libbase",
    ],

    target: {
        // Required for LLVM.
        linux_glibc: {
            host_ldlibs: [
                "-lncurses",
            ],
        },
    },

    srcs: [
        "read_apk.cpp",
        "read_elf.cpp",
        "utils.cpp",
    ],

    group_static_libs: true,
}

cc_defaults {
    name: "libsimpleperf_dex_read_static_reqs_defaults",
    defaults: ["libdexfile_static_defaults"],
    static_libs: [
        "libdexfile_external",
        "libdexfile_support",
    ],
    header_libs: ["libdexfile_external_headers"],
    export_header_lib_headers: ["libdexfile_external_headers"],
}

cc_library_static {
    name: "libsimpleperf_dex_read",
    defaults: [
        "simpleperf_defaults",
        "libsimpleperf_dex_read_static_reqs_defaults",
    ],
    host_supported: true,

    export_include_dirs: [
        ".",
    ],

    // TODO: fix or workaround this.
    cflags: [
        "-DSIMPLEPERF_REVISION=\"dummy\"",
    ],

    static_libs: ["libbase"],

    srcs: [
        "read_dex_file.cpp",
    ],

    group_static_libs: true,
}

cc_binary {
    name: "simpleperf",
    host_supported: false,
    srcs : [
        "CallChainJoiner.cpp",
        "cmd_debug_unwind.cpp",
        "cmd_dumprecord.cpp",
        "cmd_help.cpp",
        "cmd_list.cpp",
        "cmd_kmem.cpp",
        "cmd_record.cpp",
        "cmd_report.cpp",
        "cmd_report_sample.cpp",
        "cmd_stat.cpp",
        "cmd_trace_sched.cpp",
        "command.cpp",
        "dso.cpp",
        "environment.cpp",
        "event_attr.cpp",
        "event_fd.cpp",
        "event_selection_set.cpp",
        "event_type.cpp",
        "InplaceSamplerClient.cpp",
        "IOEventLoop.cpp",
        "JITDebugReader.cpp",
        "main.cpp",
        "OfflineUnwinder.cpp",
        "perf_regs.cpp",
        "read_apk.cpp",
        "read_dex_file.cpp",
        "read_elf.cpp",
        "record.cpp",
        "record_file_reader.cpp",
        "record_file_writer.cpp",
        "RecordReadThread.cpp",
        "report_sample.proto",
        "thread_tree.cpp",
        "tracing.cpp",
        "UnixSocket.cpp",
        "utils.cpp",
        "workload.cpp",
    ],
    shared_libs: [
        "libbase",
        "libcutils",
        "libdexfile",
        "libdexfile_external",
        "libdexfile_support",
        "libevent",
        "libLLVM_android",
        "liblzma",
        "libprocinfo",
        "libprotobuf-cpp-lite",
        "libunwindstack",
        "libziparchive",
    ],
    use_version_lib: true,
}